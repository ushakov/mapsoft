Import ('env')

e=env.Clone()
e.UseLibs('geo_io mp srtm')

def pod2man(env, name, ext):
   """Setup command for pod2man conversion by <name> argument"""
   cmd = env.Command(name+'.'+ext, name+'.pod',
     "cat %s.pod common.pod | pod2man -n %s -c mapsoft -r mapsoft > %s.%s"
      % (name, name, name, ext), chdir = 1)
   env.Depends(cmd, 'common.pod')
e.AddMethod(pod2man)

map (lambda(f): e.Program(f+'.cpp'),\
  Split("""
    mapsoft_convert
    mapsoft_mkmap
    mapsoft_ref
    mapsoft_toxyz
    mapsoft_map2fig
    mapsoft_srtm2fig
    mapsoft_fig2fig
    mapsoft_pano
    mapsoft_geofig

    convs_pt2pt
    convs_map2pt
    convs_nom
    """))

env_vmap=env.Clone()
env_vmap.UseLibs('vmap')
env_vmap.Program('mapsoft_vmap.cpp')

e.pod2man('mapsoft_convert', '1')
e.pod2man('mapsoft_vmap',    '1')
e.pod2man('mapsoft_geofig',  '1')

env.Install(env.man1dir, Split("""
  mapsoft_convert.1
  mapsoft_vmap.1
  mapsoft_geofig.1
"""))

env.Install(env.bindir, Split("""
  mapsoft_convert mapsoft_vmap mapsoft_geofig
  convs_pt2pt convs_map2pt convs_nom
"""))

env.SymLink("mapsoft_vmap", "vmap_copy", env.bindir)


