#!/usr/bin/perl -w
use strict;


die "usage: x0 y0 < in > out\n" if $#ARGV != 1;
my ($x0, $y0) = ($ARGV[0],$ARGV[1]);

sub u_col{
  my $u = shift;
  return 38  if $u < 5;
  return 39  if $u < 10;
  return 40  if $u < 20;
  return 41  if $u < 40;
  return 42  if $u < 80;
  return 43  if $u < 160;
  return 44;
}

sub u_dep{
  my $a = shift;
#  return 0;
  return 6 if $a < 5;
  return 5 if $a < 10;
  return 4 if $a < 20;
  return 3 if $a < 40;
  return 2 if $a < 80;
  return 1 if $a < 160;
  return 0;
}



sub a_wid{
  my $u = shift;
  return 1 if $u < 100;
  return 2 if $u < 200;
  return 3 if $u < 400;
  return 4;
}
sub a_dep{
  my $u = shift;
  return 90 if $u < 100;
  return 80 if $u < 200;
  return 70 if $u < 400;
  return 60;
}

my @data;

my $wid=0;
my $col=0;
my $dep=0;


my $k = 5;

my $a0 = 0;

sub xy2fig{
  my $x = shift;
  my $y = shift;
  return int(($x-$x0)*1200*$k*cos($y/180.0*3.1415926)), int(($y0-$y)*1200*$k);
}

sub print_data{

  # усредяняем уклоны
  my @d1;
  my $avr_n = 30;
  for (my $i = 0; $i<= $#data; $i++){

    my $li = $i - $avr_n;
    my $ri = $i + $avr_n;
    $li=0      if $li<0;
    $ri=$#data if $ri>$#data;
    my $s = 0;
    my $n = 0;
    for (my $ii = $li; $ii<=$ri; $ii++){
      $s+=$data[$ii]->{u};
      $n++;
    }
    $s/=$n if $n!=0;
    $d1[$i] = $data[$i];
    $d1[$i]->{u} = $s;
#    print STDERR $d1[$i]->{d}." ".$d1[$i]->{u}."\n";
  }

  # фильтруем слишком частые точки
  # Ширина линий меряяется в 1/72 дюйма,
  # а координаты - в 1/1200
  my ($xo, $yo)=(0,0);
  my @d2;
  foreach (@d1){
    my ($x, $y) = xy2fig($_->{x},$_->{y});
    if (sqrt(($x-$xo)**2 + ($y-$yo)**2)*72 > $wid*1200 /4 ){ # четверть толщины
      push @d2, $_;
      ($xo, $yo) = ($x, $y);
    }
  }

  my $n = $#d2+1;
  return if $n<1;

  print "2 1 0 $wid $col 7 $dep -1 -1 0.000 1 1 -1 0 0 $n\n";
  foreach (@d2){
    my ($x, $y) = xy2fig($_->{x},$_->{y});
    printf "\t%d %d\n", $x, $y;
  }
}

sub print_txt{
  return if $#data <0;
  my ($x,$y) = xy2fig($data[$#data]->{x}, $data[$#data]->{y});
  my $h = int($data[$#data]->{h});
  my $a1 = int($data[$#data]->{a});
  my $a2 = $a0-$a1;
  return if $a1 < 20;
  print "2 1 0 2 0 7 61 -1 -1 0.000 2 1 -1 0 0 1\n\t$x $y\n";
  print "4 0 0 50 -1 18 4 0.0000 4 90 315 $x $y $h\\001\n"; $y-=50;
  print "4 0 0 50 -1 18 4 0.0000 4 90 315 $x $y $a1+$a2\\001\n";
}

print qq*#FIG 3.2
Landscape
Center
Metric
A4
360.00
Single
-2
1200 2
0 32 #c0c0c0
0 33 #a0a0a0
0 34 #808080
0 35 #606060
0 36 #404040
0 37 #202020
0 38 #bbbbbb
0 39 #8affff
0 40 #00bbff
0 41 #0000ff
0 42 #9700ff
0 43 #ff00bd
0 44 #ff0000
6 -2140 408 -925 1623
6 -1555 453 -1375 588
4 0 0 50 -1 16 5 0.0000 4 60 45 -1435 554 2\\001
4 0 0 50 -1 16 6 0.0000 4 60 120 -1555 588 \313\315\\001
-6
2 2 0 1 0 7 50 -1 -1 0.000 0 0 -1 0 0 5
         -2140 408 -925 408 -925 1623 -2140 1623 -2140 408
2 1 0 3 44 7 90 -1 -1 0.000 0 1 7 0 0 2
         -1375 1443 -1375 1578
2 1 0 3 43 7 91 -1 -1 0.000 0 1 7 0 0 2
         -1375 1308 -1375 1443
2 1 0 3 42 7 92 -1 -1 0.000 0 1 7 0 0 2
         -1375 1173 -1375 1308
2 1 0 3 41 7 93 -1 -1 0.000 0 1 7 0 0 2
         -1375 1038 -1375 1173
2 1 0 3 40 7 94 -1 -1 0.000 0 1 7 0 0 2
         -1375 903 -1375 1038
2 1 0 3 39 7 95 -1 -1 0.000 0 1 7 0 0 2
         -1375 768 -1375 903
2 1 0 3 38 7 96 -1 -1 0.000 0 1 7 0 0 2
         -1375 633 -1375 768
2 1 0 1 32 7 50 -1 -1 0.000 0 0 7 0 0 2
         -1870 678 -2050 678
2 1 0 2 32 7 50 -1 -1 0.000 0 0 7 0 0 2
         -1870 813 -2050 813
2 1 0 3 32 7 50 -1 -1 0.000 0 0 7 0 0 2
         -1870 948 -2050 948
2 1 0 4 32 7 50 -1 -1 0.000 0 0 7 0 0 2
         -1870 1083 -2050 1083
4 0 0 50 -1 16 6 0.0000 4 90 315 -1330 498 \325\313\314\317\316,\\001
4 0 0 50 -1 16 6 0.0000 4 90 225 -1330 588 \315/\313\315\\001
4 0 0 50 -1 16 6 0.0000 4 120 570 -2095 588 \327\317\304\317\323\302\317\322\301,\\001
4 0 0 50 -1 16 6 0.0000 4 90 450 -2095 498 \320\314\317\335\301\304\330\\001
4 0 0 50 -1 16 6 0.0000 4 90 210 -1285 858 5-10\\001
4 0 0 50 -1 16 6 0.0000 4 90 270 -1285 993 10-20\\001
4 0 0 50 -1 16 6 0.0000 4 90 270 -1285 1128 20-40\\001
4 0 0 50 -1 16 6 0.0000 4 90 270 -1285 1263 40-80\\001
4 0 0 50 -1 16 6 0.0000 4 90 240 -1285 1533 160+\\001
4 0 0 50 -1 16 6 0.0000 4 90 330 -1285 1398 80-160\\001
4 0 0 50 -1 16 6 0.0000 4 90 150 -1285 723 0-5\\001
4 0 0 50 -1 16 6 0.0000 4 90 270 -1825 723 5-100\\001
4 0 0 50 -1 16 6 0.0000 4 90 390 -1825 858 100-200\\001
4 0 0 50 -1 16 6 0.0000 4 90 390 -1825 993 200-400\\001
4 0 0 50 -1 16 6 0.0000 4 90 240 -1825 1128 400+\\001
-6
*;

printf "2 1 0 1 44 7 49 -1 -1 0.000 0 0 -1 0 0 2\n\t%d %d %d %d\n", 
  xy2fig($x0,$y0), xy2fig($x0+10.0/3680.0*180/3.1415926,$y0);

my $n=0;
foreach (<STDIN>){
  if (/^\s+$/ || /^#/){
    $n=0;
    print_data();
    @data = ();
    next;
  }
  s/^\s+//;
  my ($y, $x, $d, $a, $h, $ha, $u) = split /\s+/;
  if ($col != u_col($u)){
    print_data() if $n>1;
    @data = ($data[$#data]) if $#data!=-1;
    $col = u_col($u);
    $dep = a_dep($a) + u_dep($u);
  }
  if ($wid != a_wid($a)){
    print_data() if $n>1;
    @data = ($data[$#data]) if $#data!=-1;
    $wid = a_wid($a);
    $dep = a_dep($a) + u_dep($u);
  }

  next if $a<5;
  push @data, {x=>$x, y=>$y, d=>$d, a=>$a, h=>$ha, u=>$u};
  $a0 = int($a) if $n==0;
  print_txt() if ($n==1);
  $n++;
}

print_data();

