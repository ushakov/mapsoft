#!/bin/sh -eu

. map_functions.sh

dpi_def=100
dpi_preview=25
dpi_list="200,100,25"

nopng="${nopng:-}"
noimg="${noimg:-}"

print_help(){
cat <<EOF
map_install - install map

Using: ${0##*/} <name>

Uses ./settings file for <style>, <geom>, <basedir>, <rscale> settings...
Uses name.fig and name.mp (if exists).
Install files into <basedir>/<name>:
 * <name>.fig.zip
 * <name>.mp.zip
 * <name>.img
 * <name>.{$dpi_list}.map
 * <name>.{$dpi_list}.png
Install symlinks into <basedir>:
 * <name>.png -> <name>/<name>.$dpi_def.png
 * <name>.map -> <name>/<name>.$dpi_def.map
EOF
}


[ "$#" = 1 ] || {
  print_help
  exit 0
}

name="$1"
mp="${name}.mp"
fig="${name}.fig"
img="${name}.img"

[ -s "$fig" ] ||
  fatal "Error: can't find $fig."

vmap="mapsoft_vmap"
cgm="cgpsmapper-static"

########## conf
style="$(get_map_par "$name" "style" "mmb")"
rscale="$(get_map_par "$name" "rscale" "50000")"
geom="$(get_map_par "$name" "geom" "")"
comm="$(get_map_par "$name" "comm" "$name")"
basedir="$(get_map_par "$name" "basedir" ".")"
auth="$(get_map_par "$name" "auth" "")"

cat << EOF
$0:
* name:    $name
* style:   $style
* geom:    $geom
* scale:   1:$rscale
* basedir: $basedir

EOF

################################

datadir="$basedir/$name"
[ -d "$datadir" ] || mkdir "$datadir" ||
  fatal "Error: can't create $datadir"

####### make name.mp
if [ -s "$mp" ]; then
  cp "$mp" "$datadir/$mp"
  "$vmap" remove "$datadir/$mp"
fi

"$vmap" copy "$fig" "$datadir/$mp"

id="$(sed -n 's/^ID=\([^\r]*\)\r\?$/\1/p' "$datadir/$mp")"
if [ -z "$id" -o "$id" = 0 ]; then
  # create uniq ID for mp
  id="0x$(date "+%s aaa" | md5sum | head -c6)"
  id="$(($id))" # convert to decimal
  quote_sed_regexp_variable id_q "$id"
  sed -i "s/^ID=.*\$/ID=$id_q\r/" "$datadir/$mp"
fi

oldcomm="$(sed -n 's/^Name=\([^\r]*\)\r\?$/\1/p' "$datadir/$mp")"
if [ "$oldcomm" != "$comm" ]; then
  quote_sed_regexp_variable comm_q "$comm"
  sed -i "s/^Name=.*\$/Name=$comm_q\r/" "$datadir/$mp"
fi
oldauth="$(sed -n 's/^Copyrght=\([^\r]*\)\r\?$/\1/p' "$datadir/$mp")"
if [ "$oldauth" != "$auth" ]; then
  quote_sed_regexp_variable auth_q "$auth"
  sed -i "s/^Copyright=.*\$/Copyright=$auth_q\r/" "$datadir/$mp"
fi

####### make name.img
if [ -z "$noimg" ]; then
  "$cgm" -o "$datadir/$img" "$datadir/$mp"
fi

####### make 300dpi name.png + name.map


if [ -z "$nopng" ]; then
  tmpfig="$(mktemp).fig"
  cp -- "$fig" "$tmpfig"
  "$vmap" range_crop tmerc pulk "$geom" "$tmpfig"
  "$vmap" remove "$tmpfig" border
  get_print "$tmpfig" "$datadir/$fig"
  rm -f -- "$tmpfig"

  fig2pnm --map "$datadir/$name.map" "$datadir/$fig" |
    pnmtopng > "$datadir/$name.png"
  rm -f "$TMPDIR/gs_*"
  ####### make resized and cropped images

  IFS=','
  for dpi in $dpi_list; do
    scale="$(echo "$dpi/300" | bc -l)"
    map_rescale\
      ${geom:+-g $geom}\
      -r "$scale"\
      -n "$comm"\
      -f "$name.png"\
      -s "$style"\
      -o "$name.$dpi"\
      "$datadir/$name.map"
  done
  IFS=' '
fi

zip -j "$datadir/$fig.zip" "$fig"
zip -j "$datadir/$mp.zip" "$datadir/$mp"
rm -f -- "$datadir/$fig" "$datadir/$mp"
if [ -z "$nopng" ]; then
  rm -f -- "$datadir/$name.png" "$datadir/$name.map"
  ln -s -f -- "$name/$name.$dpi_def.png" "$basedir/$name.png"
fi

cat > "$datadir/index.htm" <<EOF
<html>
<head>
<title>slazav maps: $comm</title>
</head>
<body>
<h3>$comm</h3>
<p><a href="$name.$dpi_def.png">
   <img border=0 src="$name.$dpi_preview.png"/></a>
<p>Raster maps:
<ul>
EOF

IFS=','
for dpi in $dpi_list; do
  cat >> "$datadir/index.htm" <<EOF
  <li>${dpi}dpi:
    <a href="$name.$dpi.png">[PNG]</a>
    <a href="$name.$dpi.map">[MAP]</a>
    &nbsp;&nbsp;
EOF
done
IFS=' '

cat >> "$datadir/index.htm" <<EOF
</ul>
<p>Vector map for Garmin GPS:
  <a href="$name.img">[IMG]</a>
<p>Sources:
  <a href="$name.fig.zip">[FIG]</a>
  <a href="$name.mp.zip">[MP]</a>
${geom:+<p>Region: $geom}
${auth:+<p>Author: $auth}
<p>Last update: $(date "+%X %d-%m-%Y")
</body>
</html>
EOF
