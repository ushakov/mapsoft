#!/bin/sh -eu

. map_functions.sh

dpi_def=100
dpi_preview=25
dpi_list="200,100,25"

nopng="${nopng:-}"
noimg="${noimg:-}"

print_help(){
cat <<EOF
map_install - install map

Using: ${0##*/} <name> [<file>]

Uses .map file for <style>, <geom>, <basedir>, <rscale> settings...
Default file: <name>.fig
Install files into <basedir>/<name>:
 * <name>.fig.zip
 * <name>.mp.zip
 * <name>.img
 * <name>.{$dpi_list}.map
 * <name>.{$dpi_list}.png
EOF
}

[ "$#" = 1 -o "$#" = 2 ] || {
  print_help
  exit 0
}

name="$1"
file="${2:-$name.fig}"

[ -s "$file" ] ||
  fatal "Error: can't find $file."

cgm="cgpsmapper-static"

########## conf
style="$(get_map_par "$name" "style" "mmb")"
rscale="$(get_map_par "$name" "rscale" "50000")"
comm="$(get_map_par "$name" "comm" "")"
geom="$(get_map_par "$name" "geom" "")"
basedir="$(get_map_par "$name" "basedir" ".")"
auth="$(get_map_par "$name" "auth" "")"

comm_koi="$(printf "%s" "$comm" | iconv -t "koi8-r")"
comm_win="$(printf "%s" "$comm" | iconv -t "cp1251")"
comm_utf="$(printf "%s" "$comm" | iconv -t "utf8")"

auth_koi="$(printf "%s" "$comm" | iconv -t "koi8-r")"
auth_win="$(printf "%s" "$comm" | iconv -t "cp1251")"
auth_utf="$(printf "%s" "$comm" | iconv -t "utf8")"

cat << EOF
$0:
* name:    $name
* style:   $style
* geom:    $geom
* scale:   1:$rscale
* basedir: $basedir

EOF

################################

datadir="$basedir/$name"
[ -d "$datadir" ] || mkdir "$datadir" ||
  fatal "Error: can't create $datadir"

####### make FIG

rm -f -- "$datadir/$name.fig"
vmap_copy --range_datum=pulkovo --range_proj=tmerc\
  --range="$geom" --range_action=crop_spl --set_brd_from_range\
  --name="$comm_utf" --rscale="$rscale" "$file" -o "$datadir/$name.fig"

####### make MP

rm -f -- "$datadir/$name.mp"
vmap_copy --range_datum=pulkovo --range_proj=tmerc\
  --range="$geom" --range_action=crop_spl --set_brd_from_range\
  --name="$comm_utf" --rscale="$rscale" "$file"\
   -o "$datadir/$name.mp" --skip_labels --name "$comm_utf"

id="$(sed -n 's/^ID=\([^\r]*\)\r\?$/\1/p' "$datadir/$name.mp")"
if [ -z "$id" -o "$id" = 0 ]; then
  # create uniq ID for mp
  id="0x$(date "+%s aaa" | md5sum | head -c6)"
  id="$(($id))" # convert to decimal
  quote_sed_regexp_variable id_q "$id"
  sed -i "s/^ID=.*\$/ID=$id_q\r/" "$datadir/$name.mp"
fi
oldauth="$(sed -n 's/^Copyrght=\([^\r]*\)\r\?$/\1/p' "$datadir/$name.mp")"
if [ "$oldauth" != "$auth" ]; then
  quote_sed_regexp_variable auth_q "$auth"
  sed -i "s/^Copyright=.*\$/Copyright=$auth_q\r/" "$datadir/$name.mp"
fi

####### make IMG

if [ -z "$noimg" ]; then
  "$cgm" -o "$datadir/$name.img" "$datadir/$name.mp"
fi

####### make PNG + MAP
if [ -z "$nopng" ]; then

  ####### make 300dpi name.png + name.map

  vmap_render -g4 -lND \
   -m "$datadir/$name.map" "$datadir/$name.fig" "$datadir/$name.png"

  ####### make resized and cropped images
  IFS=','
  for dpi in $dpi_list; do
    scale="$(echo "$dpi/300" | bc -l)"
    map_rescale -r "$scale" -s "$style" -o "$name.$dpi" "$datadir/$name.map"
  done
  IFS=' '
  rm -f -- "$datadir/$name.png" "$datadir/$name.map"
fi

####### zip MP and FIG

zip -j "$datadir/$name.fig.zip" "$datadir/$name.fig"
zip -j "$datadir/$name.mp.zip" "$datadir/$name.mp"
rm -f -- "$datadir/$name.fig" "$datadir/$name.mp"

####### make HTM

cat > "$datadir/index.htm" <<EOF
<html>
<head>
<title>slazav maps: $comm_koi</title>
</head>
<body>
<h3>$comm_koi</h3>
<p><a href="$name.$dpi_def.png">
   <img border=0 src="$name.$dpi_preview.png"/></a>
<p>Raster maps:
<ul>
EOF

IFS=','
for dpi in $dpi_list; do
  cat >> "$datadir/index.htm" <<EOF
  <li>${dpi}dpi:
    <a href="$name.$dpi.png">[PNG]</a>
    <a href="$name.$dpi.map">[MAP]</a>
    &nbsp;&nbsp;
EOF
done
IFS=' '

cat >> "$datadir/index.htm" <<EOF
</ul>
<p>Vector map for Garmin GPS:
  <a href="$name.img">[IMG]</a>
<p>Sources:
  <a href="$name.fig.zip">[FIG]</a>
  <a href="$name.mp.zip">[MP]</a>
${geom:+<p>Region: $geom}
${auth:+<p>Author: $auth}
<p>Last update: $(date "+%X %d-%m-%Y")
</body>
</html>
EOF
