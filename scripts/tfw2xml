#!/bin/sh -efu

PROG="${0##*/}"

show_help(){
  echo "Usage: $PROG -o <map opts> -p <point opts> <file1.tiff> ..."
  exit 1;
}

############################################################

opts="ho:p:"

TEMP=`getopt -n "$PROG" -o $opts -- "$@"` || show_help
eval set -- "$TEMP"

mopts=""
popts=""

while :; do
  case "$1" in
    -h) show_help ;;
    -o) mopts=$2; shift ;;
    -p) popts=$2; shift ;;
    --) shift; break ;;
  esac
  shift
done

[ "$#" -ge 1 ] || show_help

############################################################

read_tfw(){
  out="$(
    sed -r -n -e '
      1s/.* ([0-9\.+-]+).*$/A=\1/p
      2s/.* ([0-9\.+-]+).*$/D=\1/p
      3s/.* ([0-9\.+-]+).*$/B=\1/p
      4s/.* ([0-9\.+-]+).*$/E=\1/p
      5s/.* ([0-9\.+-]+).*$/C=\1/p
      6s/.* ([0-9\.+-]+).*$/F=\1/p
    ' $1)"
  eval "$out"
}

get_image_size(){
  out="$(
    identify $1 |
      sed -r -n -e 's/.*? ([0-9]+)x([0-9]+).*/W=\1\nH=\2/p')"
  eval "$out"
}

for i in "$@"; do
  tfw=${i%%.*}.tfw;
  if [ ! -f "$i" ]; then
    echo "Can't find file $i"
    continue
  fi
  if [ ! -f "$tfw" ]; then
    echo "Can't find file $tfw"
    continue
  fi

  read_tfw $tfw
  get_image_size $i

  echo "<map file=\"$i\""${mopts:+ $mopts}">"
  printf "0 0\n$W 0\n$W $H\n0 $H\n" |
  while read x y; do
    xg=$(printf "$A * $x + $B * $y + $C\n" | bc -l)
    yg=$(printf "$D * $x + $E * $y + $F\n" | bc -l)
    echo "  <pt xr=\"$x\" yr=\"$y\" x=\"$xg\" y=\"$yg\""${popts:+ $popts}"/>"
  done
  echo "</map>"

done


