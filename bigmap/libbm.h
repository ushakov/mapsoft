/*	libbigmap -- Библиотека для склеивания сканированных карт из 
        нескольких кусков. 
        v 0.1, slazav, 4.1.2004
        v 0.2, slazav, 29.9.2006
*/

#include <image.h>

static int bm_debug = 1; // выдавать всякие сообщения

/***************************************************************************/
struct bm_img{            // кусочек карты

    bm_img(Image<int> i):image(i){}
    bm_img():image(Image<int>(0,0)){}

    Image<int> image;     // картинка 

    int x1, y1, x2, y2;   //Контрольные точки на 4 угла: 
    int x3, y3, x4, y4;   // левый-верхний, правый-верхний,
                          // левый-нижний и правый-нижний.

    double x0, y0;
    double kx, sx;    //Параметры для склейки картинки с остальными:
    double ky, sy;    // положение левого-верхнего угла, сжатие по
                      // двум осям, сдвиг вдоль двух осей
                      // x' = x0 + sx*x + kx*y
                      // y' = y0 + sy*y + ky*x

    int fixed;        //Какая из сторон картинки уже закреплена (то есть
                      //подклеена к предыдущей картинке):
                      //  0-картинка свободна, 1/2/3/4 - заклеплена 
                      //  верхняя/левая/правая/нижняя сторона
                      //  5 - закреплено две соседних стороны
                      //(используется в функциях bm_vert и bm_horiz)
};
/***************************************************************************/
struct bm_map{       //карта

    bm_map(int _nx, int _ny);
    ~bm_map();

    // Начать склейку новой карты из nx x ny кусков

    int add(Image<int> image, int i, int j,
       int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);
    // Добавить к карте новый кусочек в позицию (i,j). Кусочек 
    // разрешено добавлять только так, чтобы он имел не более двух боковых соседей, 
    // причем если соседа два, они должны примыкать по соседним сторонам.
    // Кроме того не долно быть угловых соседей, с которыми не общего бокового соседа.

    // x1-x4, y1-y4 - координаты контрольных точек,
    // расположенных на углах картинки - в левом-верхнем, правом-верхнем,
    // левом-нижнем и правом-нижнем соответственно. При склейки некоторые
    // контрольные точки (в углах карты), очевидно, не будут использоваться.

    // При добавлении кусочка меняются только его параметры, параметры ранее 
    // добавленных кусочков не меняются.

    // Если соседей нет, кладется x0=y0=0 sx=sy=1 kx=ky=0;
    // Если сосед один, например слева или справа - подгонка
    // проводится по двум контрольным точкам, находятся x0,y0, sy и kx,
    // и считается что sx=1, ky=-kx;
    // Если соседа два, подгонка проводятся по трем точкам и находятся все параметры.
    // У кусочка фиксируются те стороны, 
    // которые примыкают к соседям (параметр fixed) -- это нужно для функций
    // bm_vert и bm_horiz

    int vert(int i, int j, int x1, int y1, int x2, int y2);
    // Изменить параметры кусочка, находящегося в позиции (i,j) так чтобы
    // контрольные точки (x1,y1) и (x2,y2) лежали на одной вертикали
    // Кусочек должен быть не завиксирован или зафиксирован сверху или снизу
    // Функция не фиксирует кусочек дополнительно.

    int horiz(int i, int j, int x1, int y1, int x2, int y2);
    // Изменить параметры кусочка, находящегося в позиции (i,j) так чтобы
    // контрольные точки (x1,y1) и (x2,y2) лежали на одной горизонтали
    // Кусочек должен быть не завиксирован или зафиксирован справа или слева
    // Функция не фиксирует кусочек дополнительно.

    Image<int> make();
    // Собрать и выдать карту


    int nx,ny;       // количество кусочков, из которых состоит карта
    bm_img *images;  // массив ссылок на кусочки
};
/***************************************************************************/
