TODO:
 * libmp -- поддержка Routes
 * libfig -- квотирование \ в тексте

TODO:
    * разобраться с lib2d/crop.h
    * у неизвестных объектов с многими точками выставлять тип в POLYLINE
    * защищать запрещенные символы при записи геоданных (',' в OE, '"' в XML, ' ' в GU)

====================================
25.08.2011
 * gred
   - Исправил падение dthread_viewer на выходе (ошибка device or
     resource busy during pthread_mutex_destroy)
   - Новые методы set_center, get_center в simple_viewer'е
   - add add_src_mark function to rubber

 * mapsoft_mapview
   - Упростил меню, выкинул неиспользуемые пункты, разбил все
     режимы на несколько подпунктов меню.
   - В режиме "Add Waypoint" при тыканьи в карту ставится временная
     отметка.
   - Добавлен режим "Show point information", показывающий координаты
     точки в разных системах, а также названия номенклатурных листов,
     на которые эта точка попадает.
   - 3-я кнопка мыши не только прерывает все действия, но и убирает
     соответствующий диалог.
   - Можно менять размер подписей к точкам.
   - Исправил ошибку с вычислением диапазонов в layer_wpt - раньше из-за
     этого не показывались одиночные точки.
   - Добавил проверку на наличие привязки при добавлении точек и треков -
     раньше при отсутствии привязки все падало.
   - При загрузке геоданных вьюер переходит к первой точке трека, или к
     первому waypoint'у, или к центру первой карты.
   - Сделал сохранение/восстановление горячих клавиш в $HOME/.mapsoft/accel
   - при переключении режимов их названия показываются на статусбаре.

28.11.2010-25.08.2011
 * gred
   - dthread_viewer: fix sigv on object rescaling -- add additional mutex
 * vector/data
   - fix TYP-file (by wladimirych)
   - change border and label codes
 * programs:
   - add mapsoft_gen program: generalize tracks
 * core/options/m_getopt.cpp: fix error messages
 * core/utils/srtm3.h: fix work with negative coords
 * scripts/map_install: cleanup code
 * vector/vmap4
   - tilevmap_put, tilevmap_get, tmap_gitwww programs
 * vector/vmap3
     _renderer
   - renderer: новый способ стирать линии под текстом
   - renderer: исправил ошибку, из-за которой текст на полях
     стирался при затирании линий под подписями
   - vmap_copy: add remove_dups, remove_empty, join_objects options
   - add vmap_copy and vmap_render to install rule
   - remove unused vmap_join program
   - add vmap_fix_diff program
 * vector/vmap4
    tilevmap_put: fix error in "-l both" option, use it by default
    tilevmap: add action logging
    tilevmap_put: keep map pars
    keep geometry of rectangular maps inside tmap; allow different label sources
    tilevmap_get: fix help
    tmap_gitwww: correct rmap generating
    tilevmap_put: do fix_diff
    tilevmap_get: -p option; allow working w/o output file
    tilevmap_get: cleanup code
    improve tmap_gitwww script
    add Readme for programs

26.10-28.11.2010
    TODO!

05.09.2010 - 26.10.2010
 * Система сборки и обустройство директорий:
   - Правильный набор .gitignore-файлов.
   - Удалены многие ненужные программы.
   - Удалены неиспользуемые autotools.
   - Удалены древние файлы ChangeLog (вся информация есть в git).
   - У директорий с библиотеками удален префикс lib.
   - Выкинуто все ненужное из core (пока остались /utils/tests!).
   - Очень удобная система подключения локальных и стандартных библиотек
     на основе pkg-config.
   - Новая структура директорий (core, programs, viewer, vector,
     tests, misc, misc_old, scripts), иерархическая сборка от корня.
   - Help в глобальном Sconstruct'e.
   - Генерация и установка данных в vector/data улучшена и
     переведена на scons, удалены большие автогенеренные файлы.
   - Исправлена сборка с новым boost.
   - Обновлен spec для сборки в altlinux.
 * Исправления в core-библиотеках:
   - Существенная чистка кода и написание комментаиев по всем библиотекам.
   - libfig:
     - Цвета хранятся в виде rgb-значений, а не кодов, которые
       разные в разных файлах и все время путаются. Таблицы стандартных
       кодов, шрифтов и т.п. вынесены из объектов в static data класса.
     - Исправлена хитрая ошибка с записью комментариев от
       объектов-цветов (выявилась в цепочке других ошибок).
   - libmp:
     - Функция range() для для всего файла.
   - lib2d:
     - Существенная чистка кода, комментарии для doxygen.
     - Rect::CNT(). Возможно, надо переименовать в center(), по
       аналогии с Line::center()
     - Исправлен оператор >> для Line<T>, можно читать пустые линии.
     - line_utils.h/nearest_pt() - сдвиг точки к ближайшей линии - пришла
       из дебрей векторных карт, переписана и улучшена.
     - line_utils: улучшена и исправлена функция generalize()
     - point_conv.h:
       - AffConv - афинное преобразование. Удачно принесено из convs::map2pt.
       - Преобразования углов в Covn. Не слишком очевидное, но очень полезное.
     - line_rectcrop.h - исправлена ошибка, все расширено и дополнено.
     - Перенесен cache.h из utils (в рамках борьбы со слишком
       разнородной libutils).
   - libutils
     - Добавлен cairo_wrapper.h, убран image_gd.h.
     - Исправлена ошибка в iconv_utils при работе с кодировкой UTF-16.
   - liboptions -класс Options и все, что с ним связано.
     - Вынесена из utils в отдельную библиотеку.
     - Новый парсер для параметров командной строки на основе getopt.
       На нем работает vmap_copy, и он гораздо понятнее и проще старого
       (на котором до сих пор работает mapsoft_convert) Надо бы перейти...
   - libgeo, libgeo_io:
     - Исправлена ошибка при чтении файлов Ozi, когда из пустых строк
       получались точки с нулевыми координатами.
     - convs::lon2pref()
     - Исправлена и дополнена библиотека для работы с номенклатурными
       названиями карт geo_nom. Сделана удобная интерфейсная программа
       для работы с ней из командной строки.
   - liblayers:
     - Перевод с gd на cairo.
   - Добавлена библиотека libvmap (работа с векторными картами -
     функциональность описана ниже).
   - Добавлена библиотека ocad (чтение и запись формата OCAD):
     - Кое-как поддерживаются форматы OCAD6..9.
     - Хорошая поддержка объектов, более-менее нормальная
       поддержка конфигурационных строк v8-v9.
     - нет поддержки setup, info в OCAD8, не слишком аккуратное
       преобразование данных из ObjectHeader'а в строки версии 9
     - пока не разбирается до конца безумная структура символов, это больше
       всего мешает простым преобразованиям между версиями.
 * mapsoft_mapview:
   - починены сломанные привязки, масштабы и фокусы gtk-виджетов
   - переведено с gd на cairo
   - удалены параметры слоев (layer configuration)
 * Работа с векторными картами:
   - Программа fig_old2new для преобразования старых карт (с идентификаторами
     объектов, использовались до весны 2010) в новый вид. Старый, не
     нужный больше код вынесен в нее из библиотеки libvmap.
   - По умолчанию в качестве стиля карты используется "default" - 
     соответствующий конфигурационный файл - это ссылка на mmb.cnf.
   - Умная обрезка карт: многоугольники обрезаются без изменения
     числа объектов, а линии, наоборот, без появления ненужных сегментов
     на границах - сразу стало удобно.
   - Придуман универсальный формат для векторной карты. Карта состоит из
     списка объектов и списка бесхозных подписей, которые можно отдельно
     заполнять, а потом установить между ними соответствие. Такое построение
     данных оказалось очень удачным.
   - Разнесены процедуры чтения-записи разных форматов и хитрые процедуры
     привязки и создания подписей. И обработка карты и введение новых
     форматов упростились очень существенно.
   - Полноценные процедуры чтения и записи карты в форматы fig, mp, в свой
     собственный текстовый формат vmap.
   - Экспериментальная поддержка форматов ocad8 и ocad9 (сейчас активно
     разрабатывается)
   - vmap_copy: преобразование векторных карт -- видимо, она уже
     может заменить программу mapsoft_vmap. Наверное надо ее даже
     переименовать...
   - vmap_render: получение из векторной карты картинки png (лучше
     прежней), а также файла привязки. Единственный минус по сравнению
     со старой программой fig2png - невозможность отрендерить произвольные
     картинки и т.п., которые могут быть в fig. Может быть, это надо решать
     простым совмещением двух картинок (с картой и с логотипами) с
     помощью ImageMagick.
   - Углы и линии притяжения точечных объектов.
     Некоторые точечные объекты могут притягиваться к некоторым линейным
     и получать ориентацию (например, ж/д станции притягиваются к ж/д,
     урезы воды - к рекам и озерам, перевалы - к хребтам). Раньше это
     делалось перед печатью, и было зашито в код программы, готовящей
     карту к печати. Теперь это делается при чтении карты и привязки
     подписей, а управляется из конфигурационного файла. Плюсы:
     - удобная возможность конфигурации, общий код в правильном месте
     - угол объекта можно использовать при конвертации в любой формат -
       и в fig и в ocad это сделано и выглядит красиво!
     - видоизмененные объекты удобнее контролировать при редактировании.
   - Возможность хранить информацию о подписях в mp в виде отдельных
     объектов, которые привязываются к соответствующим объектам по
     тем же правилам, что и в fig. Таким образом mp становится полноценным
     форматом, из которого можно делать растр и т.п.
   - Также реализована возможность хранить подписи в xfig в виде линий -
     для визуализации точек привязки. Однако это не используется в результате.
 * vector/data
   - несколько новых знаков:
     (подпись, граница карты, магазин, заросшая дорога, вал)
   - информация о притяжении точечных объектов к линиям
   - информация для преобразования карт mmb в ocad

====================================
ushakov 01.06.2009
 * Растащил директории по поддиректориям:
   - в сore лежит всё самое нужное
   - в vector всё для работы с векторными картами
   - mapsoft_mapview переехало в viewer
   - в experimental -- разные опыты (можно не читать)
   - в misc -- непонятно что (тоже можно не читать)

Остались непонятки:
 * куда девать poehali? в experimental, в misc?
 * куда девать tests?

ushakov 15.05.2009
 * Перевёл все файлы в utf8
 * Привёл #include в единый вид (#include "../layers/layer.h")
 * Написал скрипт, строящий дерево зависимостей директорий

slazav 3.4.2009
 * обновил libjeeps из gpsbabel
   TODO: почистить utils.c/utils.h в libjeeps.

slazav 26-30.03.2009

 * spirit_utils: правильная обработка ошибок.
   Показывается строка и столбец в файле... (fix #3)

 * lib2d
   - line.h: класс MultiLine : std::list<Line<T> >
   - line.h: исправил очевидно неправильную функцию Line<T>::length()
   - line.h: line::inv() -- возвращает перевернутую линию
   - line_utils.h: добавил процедуру join_polygons() склейки полигона из
     нескольких сегментов (то, что было в libmp/mp_io.cpp:joiner)

 * Options
   - революция: переделел интерфейс: get(key, val) -> val=get(key,def)

 * libmp
   - часть параметров карты и объектов хранится в Options. Теперь можно особенно не
     заботиться о появлении новых полей, они будут читаться/писаться по мере появления.
     TODO: перенести в Options оставшиеся поля...
   - Простая программка libmp/mp_test. Считывает указанные файлы и выводит результат
     на stdout...
   - суровая революция: mp_object : Line<double> -->  mp_object : MultiLine<double>

 * geofig
   - всякие параметры читаются/пишутся как Options
     средствами libfig ("\name=value").
     Чтение старых записей ("name: value") пока тоже работает.

 * libfig
   - Options в fig_world и fig_object! 
     читаются/пишутся в комментарии как "\key=val"
   - Простая программка libfig/fig_test.

 * geofig
   - всякие параметры читаются/пишутся как Options
     средствами libfig ("\name=value").
     Чтение старых записей ("name: value") пока тоже работает.

 * geo_data
   - функция to_options_skipdef(T obj) -- obj преобразуется в Options,
     причем поля, имеющие значения по умолчанию пропускаются
   - добавил parse_from_options/to_options для g_map
   - parse_from_options для всех объектов: проверка на наличие
     неиспользованных параметров (как это уже было в xml и fig)
   - parse_from_options для всех объектов: координаты берутся и из
     параметров "lon", "lat" и из "x", "y" (приоритет - у первых)
     (раньше "x" и "y" применялись только в точках привязки в xml!)
   - parse_from_options/to_options для всех объектов: поле "t"
     переименовано в time
   - to_options для всех объектов: записывается также
     количество точек ("points")

 * libfig и libgeo_io/xml: при чтении параметрам без значения приписывается
   значение 1. То есть для точки трека <pt x=0 y=0 start> будет прочитано
   start=1 и будет возможен lexical_cast в bool

 * libgeo_io/xml:
   - в преобразовалках из xml_point и xml_point_list использовал
     parse_from_options (а не свой аналогичный код, как было раньше)
   - TODO: сделать и запись через to_options_skipdef() -- обратить внимание
     на <pt x=0 y=0 start>

 * libvmap -- общая структура данных для векторной карты.
   - чтение/запись в директорию "1объект=1файл"
   - чтение/запись mp (пока без rmap)
   - чтение fig (пока без rmap)

slazav 8.11.2008
 * libzn: картинки теперь ищутся в директориях /usr/share/mapsoft/pics/ и ./pics/
   (раньше искались в той, которая была указана в cnf-файле -- в ./pics/)

slazav 15.10.2008
 * Революция типов. geo_names.h + geo_enums.h -> geo_types.h
   Проекции, СК, символы точек и т.п. - все теперь единообразно и пригодно к boost::lexical_cast
   Кажется, пострадала только программа mapview/test1
   Революция не окончена!

slazav 09-12.10.2008
 * Сортировка fig-файлов (для удобного diff'a) -- программа programs/fig_sort.
   (Для git-репозитария карт)
 * Новые Options, более простые. Чтобы тип данных работал с
   Options, у него должен быть определен конструктор без аргументов и
   операторы >> и << ввода-вывода из потока (т.е. с этим типом должен
   работать boost::lexical_cast)
 * Операторы ввода-вывода для Point, Line, Rect.
   (Например, чтобы передавать диапазон координат как один параметр, типа geom=10x10+20+20)
 * Функция для чтения параметров из конфигурационных файлов и из командной строки
   (utils/read_conf.h).
   Использована в mapsoft_convert.
 * Параметр skip в mapsoft_convert (и в mapsoft_io) -- можно не записывать 
   карты/треки/точка/старые треки

slazav 09.07.2008
 * mapsoft_vmap - при обновлении подписей обновляю и их внешний вид
 * mapsoft_vmap - при обновлении ключей не создаю ключей для неизвестных объектов
 * BUG: если в картинке для объекта есть второй compound - объект исчезает при обновлении ключей
 * znaki2 -- добавлены знаки для развалин, шахт, УЖД, большого шоссе
             изменились mp-номера для домов и моста-5
             добавлены подписи для мостов


slazav 04.07.2008
 * изменил поведение mapsoft_vmap labels (см комментарии в src)
 * найдена ошибка: при повторяющихся ключах происходит фигня. 
   - поставил специальную проверку в mapsoft_vmap labels (где была основная фигня)
   - mapsoft_vmap keys теперь это исправляет (только для карты, не для источника)
   TODO: при переносе ключа из составного объекта он может дублироваться!!!
 * исправил скрипт znaki2/westra/kml2mp

slazav 25.06.2008
 * modify fig and mp read functions to get new headers.

slazav 24.06.2008
 * small fixes of libzn and mapsoft_vmap
 * add libzn-utils/scripts

slazav 22.06.1008
 * переделал проверку картографических объектов (is_map_depth in libzn/zn.h)
   Раньше объект считался картографическим объектом, если его глубина находилась 
   в диапазоне [50:200).
   Теперь объект считается картографическим объектом, если его глубина попадает
   в диапазон, ограниченный минимальной и максимальной глубиной объектов из 
   конфигурационнного файла.
 * Исправил сравнение fig-объектов с маской в libzn/zn.h. Теперь цвета 
   -1 (default) и 0 (black) не различаются.
 * libzn-utils -- новые команды очистки файлов

slazav 22.06.1008
 * перекодировка в UTF8 и обратно при записи геоданных в форматы OE, GU, XML.
   дефолтная кодировка для GU и XML - KOI8-R, для OE - WINDOWS-1251.
   (TODO - возможность менять кодировку через опции!)
   перекодируются названия и комментарии точек, комментарии к трекам и картам.
 * сделал запись привязки в fig2pnm -- пока работает плохо! (неаккуратно 
   считаются границы fig-файла, непонятно, какое имя картинки писать в map-файл)

slazav 20.06.2008
 * вынес отдельно библиотеку zn
 * начал писать новый набор программ для работы с ней (zn/utils)

slazav 9.05.2008
 * переделал fig2pnm, для рисования контуров и убирания тонких линий...


slazav 8.05.2008
 * вынес из znaki2/fig2pnm.cpp в utils/pnm_shifter.h
   специальный объект для чтения pnm-файла полосой.
   Надеюсь, он еще не раз мне пригодится...

 * убрал версии конструкторов geo_convs с const char * параметрами
   (было сделано плохо!)

 * Изменения в разборе mp-файлов:
   объекты POI должны состоянть из одной точки
   объекты POLYLINE разбираются как и раньше - линии из несколько кусков становятся несколькими линиями
   объекты POLYGON из нескольких кусков склеиваются в один, причем с добавками, чтоб это все красиво выглядело

 * Исправил недавно сделанную суровую ошибку в geo_convs.h
 * Исправил суровую ошибку в znaki2/line_dist.h - удивительно, почему я до сих пор на нее не натыкался...

slazav 6.05.2008
 * IConv - use std::string in interface, not const char *.
         - default value for def_enc - empty string. If def_enc empty - it is not used.
         - modify libfig and libmp to use new IConv.
 * io_oe.h, io_xml.h и т.п.
 * use spirit_utils in io_oe, io_gu, io_xml
 * use UTF-8 in geodata:
   - io_gps: in - w/o changes. out - utf->koi8->7bit (wpt: name, comm, track: comm)
   - TODO

 * remove some files from ms2.1/
 * move gs_bbx_test.cpp from vector/ to geo_io/
 * pack some of vector/ files to arc/vector.tgz arc/vector-znaki.tgz
 * remove vector/
 * add *.gpx, *.crs *.hst *.mbcrs track files to geo_io/test
 * remove Makefiles from geo_io/ programs/ utils/
 * fix znaki2/ building

slazav 5.05.2008
 * вынес из geo_data.h описание функций в geo_data.cpp
 * избавился в нем от функций set_default_values()
 * geo_convs - сделал версии конструкторов преобразований с const char * параметрами
   (типа pt2pt cnv("wgs84", "lonlat", Options(), "pulkovo", "tmerc", Options()); )
 * сделал отдельную библиотеку lib2d для point, line, rect, image и т.п...
   - выделил из line.h  отдельные функции в line_utils.h и line_polycrop.h (и переделал кое-что в templates)
   - выделил из point.h  отдельные функции в point_int.h (и слил со старым point_int.h), point_utils.h, point_cross.h
   - перенес utils/rect_crop.h -> lib2d/line_rectcrop.h
 * убрал из utils неиспользуемые файлы image_google_misc.h и image_ks_misc.h
 * переделал передачу char * параметров в image_draw, чтоб компилятор не ругался :)
 * переименовал image_draw в image_gd, вынес описанеи функций в image_gd.cpp

slazav 1.05.2008
 * znaki2 
   - использовал новые libfig, libmp.
   - при попадании на вход нечитаемого файла ничего не портится
   - на неизвестные объекты одного типа ругаемся по одному разу
   - исправлена ошибка при добавлении из mp неизвестных объектов
 * fig_io -- вставил проверку и обрезку слишком длинных комментариев при записи файла.
   (xfig не понимает >100 строк комментариев и длину строки > 1022)
 * завел директорию arc для того, что выбросить жалко, а использовать не надо.
   положил туда chfig.tgz -- старая перловая преобразовалка карт в печатный вид
   (в ней есть жутко полезный XFig.pm, кстати) - убрал ее из /vector


slazav 30.04.2008
 * выделил отдельную библиотеку libfig для работы с fig-файлами (без гео-привязки).
   и отдельную библиотеку libmp для работы с mp-файлами (тоже без работы с гео-преобразованиями)
   (хочется разгрести помойки geo_io и utils...)
 * файл utils/iconv_utils.h
 * преобразование кодировки при чтении/записи mp и fig. Внутри все хранится в UTF-8

slazav 30.04.2008
 * Сделал файл utils/spirit_utils.h
   В нем определены все typedef'ы, нужные для разбора с file_iterator'ами
   и функция  bool parse_file(const char * name, const char *file, const rule_t & rule)
   которая парсит файл, а в случае неудачи выдает достаточно разумную ошибку.

   Для испольвования надо:
     подключить h-файл, и нужные boost'овские hpp, кроме spirit/core.hpp и spirit/file_iterator.hpp
     сделать нужное правило rule_t 
     вызвать parse_file("имя программы для лога", filename, rule);

   На эту систему переведено чтение fig и mp файлов

   Заменил заголовок функций mp::read, fig::read чтоб они возвращали bool - результат разбора.
   bool read(const char* filename, mp_world & world)

   Теперь новые объекты дописываются в старый world!
   При ошибке разбора файла world не портится.

 * fig_crop, fig_ref_mod mapsoft_add2fig -- принимают одно имя файла,
   его же и читают и перезаписывают.
   При неудачном разборе файла не портят, ругаются и отваливаются.

 * mapsoft_fig2fig mapsoft_srtm2fig, mapsoft_map2fig - при неудачном разборе
   ругаются, отваливаются и не портят файла.




slazav 11.04.2008
 * программа для обрезания fig-файлов /programs/fig_crop
   - работает с точками, линиями, многоугольниками
   - в исходном файле должен быть прямоугольник с комментарием CUTTER

slazav 10.04.2008
 * ключ --add в update_map
 * np2pt - для своих целей :)
 * utils/rect_crop.h - попытка написать обрезалку линий и многоугольников по прямоугольнику...
 * geo_io/fig_utils.h - то же для fig-файлов

slazav 19.2.2008
 * сделал преобразования g_waypoint_list <-> Gtk::TreeModel
   Пытаюсь писать Gtk::TreeView для просмотра и редактирования 
   точек (см. /mapview/test1), пока уперся в необходимость писать свои Renderer'ы
   для "странных типов данных" типа времени и т.п.
   Тут вообще огромный простор для того, чтоб все было красиво:
   чтоб цвет показывать цветом и выбирать через соответствующий диалог, 
   сделать пересортировку по названию, по времени, по времени в комментарии,
   показывать картинки точек и т.п...

slazav 16.2.2008
 * добавил запись png-файлов (только 24 бит/точку)
 * продвинулся в реализации mapview. 
 * исправил глупую ошибку в записи трека garmin-utils

slazav 6.1.2008
 Поменялись проекции снимков на new.kosmosnimki.ru.
 старый архив снимков и старые программы не действуют
 пытаюсь разобраться...
 * Сделано!

slazav 17.12.2007
 znaki2/make_nom - исправил ошибку с неправильным ос.м. при преобразовании
  границы карты (заметную только на мелких масштабах)...

slazav 16.12.2007
 znaki2/get_print: теперь в текстовом объекте с комментарием CURRENT DATE
   в текст вписывается текущая дата 
  utils/m_time.h: функции Time::time_str() и Time::date_str() для получения
   даты и времени в виде строк.
 znaki2/fig2pnm: сделал более правильное сложение слоев

slazav 14.12.2007

 * znaki2/make_nom <название> > out.fig
   изготовление привязанного fig-файла - заготовки для
   номенклатурного листа. 
   Название листа - вида N45-001-1, N45-002, N45-03, N45-1, N45
   сдвоенные: P45-46, P45-1-2, P45-03-04, P45-111-112, P45-111-1-2

 * программа для подкладывания растров в привязанный fig-файл!
     mapsoft_map2fig <fig> map <map file 1> [<map file 2> ...]
     mapsoft_map2fig <fig> google <scale> <google_dir>
     mapsoft_map2fig <fig> ks <scale> <ks_dir>
   Картинки режутся на плитки не более чем 1024х1024 и идут в
   директорию <fig>.img
   Граница прямоугольника, который надо заполнять картинками
   берется либо из объекта с комментарием BRD, либо из точек привязки.

 * программа для подкладывания srtm-данных в привязанный fig-файл!
     mapsoft_srtm2fig <fig> hor   <srtm_dir> <step1> <step2>
     mapsoft_srtm2fig <fig> ver   <srtm_dir>
   добавление, соответственно, горизонталей (обычных через step1 м 
   и толстых через step2 м) и вершин...

 * Исправил ошибку с удалением лишних точек из линий.
   (line.h: generalize)

slazav 8.12.2007
 * директория znaki признана ненужной - скоро уберу
 * znaki2 постепенно дописываю
 * небольшие изменения в fig.h - функции для замыкания-размыкания линий,
   изготовления сплайнов из линий...
 * внес дополнения в систему условных обозначений в znaki
 * исправил ошибку в отрезании линий по многоугольнику в utils/line.h

slazav 6.12.2007
 * небольшие исправлекния ошибок в fig.cpp, fig.h
 * yaml/yaml.h, yaml/yaml.cpp -- библиотека разбора yaml-файлов.
   Написана Т.А., надо бы запихать yaml-parser в отдельный
   объект (сходу у меня не вышло). Использует библиотеку libsyck
   (поэтому я решил положить это в отд.директорию, а не, например,
   в utils)
 * Много изменения в znaki2. Скоро, кажется, все будет готово :)


slazav 3.12.2007
 * изменена работа с пользовательскими цветами (номер > 31) в fig

   - При чтении fig-файла в качестве цвета объекта и цвета фона 
   записывается реальное RGB значение + 0x1000000. В fig_world.colors
   добавляется правильная запись.

   - При записи fig-файла для цветов >=0x1000000 ищется 
   записть в fig_world.colors с номером >31 и нужным цветом.
   Если такой записи нет - она добавляется.

   Таким образом, можно, например, сравнивать реальные значения
   пользовательских цветов, копировать объекты между
   fig-файлами с разными системами пользовательских цветов и т.п.

   В fig_mask могут указываться такие цвета >=0x1000000,
   пока только в десятичном виде...

slazav 27.11.2007
 * сделал обрезание линий прямоугольником (utils/line.h)
 * в директории utils/test_srtm :
    - get_hor.cpp -- получение горизонталей и вершин в формате mp для 
      района, заданного координатами lonlat, в СК wgs84.
    - get_hor_gk.cpp -- то же, для района, заданного 
      координатами Г-К в СК Пулково-42.
    - mk_gk_fig.cpp -- изготовление пустого fig-файла,
      привязанного нужным образом, в координатах Г-К
      СК Пулково-42.
    Директория собирается make'ом, им же делается 
    тестовая картинка...

slazav 26.11.2007
 * сделал директорию mapview, где хочется писать новый вьюер...
   Пока написал что-то только про класс mapview.h
 * utils/line.h -- class Line<T> : std::vector<Point<T> >
   разные функции для работы с линиями...
 * point_int.h -- разные функции для работы с Point<int>
   (наверное, сюдя можно перенести что-то из point.h)
 * geo_io/geo_convs.h 
   добавил преобразования линий в классе pt2pt
   Получилось 6 одинаковых кусков кода, надо бы что-то с этим сделать :(
 * перенес в point.h функции поиска пересечения отрезков из 
   (неиспользуемого) poly.h

slazav 24.11.2007
 * В директории znaki находится новый проект по рисованию карт.
   Основные идеи - 3 (или 4) формата: fig и mp для печати и 
   для редактирования, причем в каждом формате хранится своя 
   уникальная информация;
   описание условных обозначений в виде иерархии классов c++...

   Сейчас тут происходит следующее:

   - zn.h -- абстрактное условное обозначение
   - zn_a.h, zn_l.h, zn_p.h -- площадные, линейные, точечные знаки
     сейчас практически сделаны все площадные знаки, многие линейные
     (без красивостей для печати), несколько точечных.
   - legend.h -- класс, который знает про все условные обозначения, 
     может делать разные преобразования объектов и рисовать красивые
     таблички условных знаков.
   - map_object.h -- некоторое совсем простое внутреннее 
     представление картографического объекта.
   - utils.h -- разные полезные функции

   - auto_gen.cpp -- программа для генерации всяких табличек 
     обозначений, typ-файла и т.п...
     все идет в директорию auto
   - mapconv.cpp -- программа для преобразования карт.
     на входе - карта в виде "для редактирования" fig или mp,
     на выходе - карта "для редактирования" или "для печати",
     fig или mp
   - add2map.cpp -- программа для добавления информации к карте

     Проблемы:

     Очень сложно заменить стиль карты. Непонятно, насколько это надо,
     но если вдруг придется - переделывать надо будет много чего...

     Надо бы отдавать знаку ссылку на всю карту, чтоб ж/д станция
     находила ближайшую ж/д и т.п., как раньше...

     Надо договориться с Тонисом о введении некоторых новых знаков...

     Надо бы сделать отдельную библиотечку для работы с typ-файлами,
     сейчас они довольно глупо записываются...

     Сделать более правильный опрос пользователя на тему привязки вновь 
     создаваемой карты (сейчас нельзя оставлять значения по умолчанию).
     Подсчитывать значения границ новой карты по умолчанию.

     Научится обрезать карты по рамке...

     Автоматическая генерация растрового файла, желательно с
     полупрозрачной  сеткой. Вообще, автоматическая синхронизация всех
     форматов карты...

slazav 20.11.2007
 * utils/srtm3.h -- доступ к srtm, такой же, как в mapsoft1, но с 
   использованием классов Image, Point, Cache. Интерполяцию дырок
   пока не сделал...
 * utils/test_srtm -- попытка написать программу построения горизонталей
   -- кажется, работает правильно!

slazav 26.10.2007
 * проекция "ks", используемая космоснимками
 * программы mapsoft_getks, mapsoft_getgoogle
   теперь я могу сказать:
     mapsoft_getks     14 39 364000 378000 6138000 6154000  
     mapsoft_getgoogle 14 39 364000 378000 6138000 6154000  
     mapsoft_mapcnv 1e-5 200 39 364000 378000 6138000 6154000 MAPS/1km/37.xml
   и у меня будут снимки в масштабе 14 на нужный квадрат
   и километровка с разрешением 200 dpi на тот же район...
   и еще привязанный fig-файл!

slazav 24.10.2007
 * исправлена ошибка с неправильно записью цвета в plt-файле
 * исправлена глупейшая ошибка при записи в xml привязок
   (если x!=0 записать y, и наоборот :)) 
 * опять пытаюсь разобраться с космоснимками...

ushakov xx.07.2007
 * Добавил log.cpp/log.h -- универсальную систему вывода информации
   надо бы на неё всё перевести, но лень.
 * Исправил ошибку в чтении bool из mapsoft_options

ushakov 23.07.2007
 * исправил ошибку с обновлением! ну и дурацкая...
   если у нас есть map m, в котором есть ключ k, то m.insert(k,v)
   не замещает старое значение, а оставляет как было! поэтому кэш не обновлялся.

slazav 20.07.2007

 * поправил mapsoft_mapcnv

ushakov 19.07.2007

 * немного поправил line_bck/frw, компилятор ругался на приведение типов
 * добавил am_mark_trk, который размечает трек по километрам

slazav 09.07.2007

 * доделал geofig.cpp / geofig.h
 * сделал программу mapsoft_add2fig (раньше я пользовался такой программой
   из старого mapsoft'a)
 * при этом в io.cpp исчезла запись в fig - она использовала странный
   o_fig.cpp, надо бы здесь придумать что-то более разумное...

 * rect.h   Rect<T> rect_pump (Rect<T> const & R, Point<T> p);
 * point.h  operator Point<double>() const;
	    operator Point<int>() const;

 * упростил интерфейс Layer, вообще много всего 
   упростил в workplane и layers. Сейчас все хорошо работает.

 * убыстрения: при масштабах > 1 преобразуется не каждая точка,
   а каждая вторая, третья и т.п.
   При увеличении масштаба >1 и при уменьшении масштаба картинки 
   заново не загружаются.

 * am_edit_tpt.h

 * Сделал типы данных Color и Time, такие, что можно делать им
   boost::lexical_cast. Теперь при редактировании точек цвета и
   даты показываются по-человечески. Старые методы 
   (Options::get_time, mapsoft_time.h и т.д.) - убрал.
   Убрал почти все Options::get_*

 * Во все actions добавил проверку, чтоб они действовали только
   на активные layer'ы

 * am_edit_track.h
   для этого добавил преобразование g_track в/из Options, 
   а также странную функцию find_track, которая пока работает 
   неправильно :)

 * am_move_tpt.h
   am_delete_tpt.h
   am_add_track.h

--------------------------------------------------------------------

slazav 06.07.2007

 * Сделал гораздо более правильные пересчеты линий 
   map2pt::line_frw и т.п. Без преобразований туда-обратно и оттого,
   кажется, без возможности зависания...
 * Исправил пару глупых ошибок в geo_convs

 * Произвел масштабную революцию.
   Теперь все масштабы отрабатываются на уровне g_map.
   Все работает (резина и выбор точек теперь работает правильно), 
   но на больших масштабах - медленно (понятно, что надо исправлять :))
   Теперь надо выкинуть очень много старого кода и сильно упростить все.

--------------------------------------------------------------------

slazav 01.07.2007

 * layer_geodata.h -- радиус поиска точек теперь передаю
   в качестве параметра функциям find_* со значением по умолчанию 3
 * geo_data.h -- ввел операторы умножения/деления g_map на число
   и прибавление/вычитания числа
   Указанные операции происходят со всеми растровыми координатами.

 * geo_io/io_xml -- исправил глупую ошибку из-за которой не читались
   треки

 * geo_data.h -- объект g_map по умолчанию инициализируется некоторым
   разумным образом.
   -- правда, при этом надо быть осторожным - если задать карту на весь
   мир, произойдет очень долгий затык в line_frw.

Два варианта взаимодействия workplane, layer и привязки:
1. привязку хранит workplane, у layer'a есть ссылка на привязку,
   workplane пинает layer'ы, при изменении привязки.
2. привязку хранит workplane, layer инициализируется в соответствии
   с какой-то привязкой, workplane строит новые layer'ы при изменении
   привязки (то есть, при всех перемасштабированиях :)).
Второй вариант довольно близок к тому, что есть сейчас, и мне он
нравится больше.

Суровый вопрос - кто должнен работать с геоданными и как они должны
быть упорядочены? Судя по всему работать должен workplane. Но
несколько объектов geo_data, как сейчас - это как-то очень запутанно
получается (кусочки треков собираются в один трек, треки собираются в
geo_data, несколько geo_data собираются в workplane). Можно было бы
для каждой  карты/трека/группы точек заводить свой layer, но карты все
же хочется группировать...

--------------------------------------------------------------------
slazav, 29.06.2007

 * Viewer::clear_cache переименовал в refresh() и немного изменил:
   теперь кэш плиток не очищается, но создаются запросы на обновление 
   всех плиток. Плитки перерисовываются поверх старых, без черного 
   экрана - очень красиво :).
 * В workplain добавил refresh_signal
 * Во вьюере workplain->refresh_signal цепляется к функции refresh()
   Так что workplain сама пинает viewer, когда что-то обновляется!
   Снаружи об обновлении вьюера заботиться обычно не надо.

  * разбирался с rubber. 
    инициализация происходит во Viewer::on_realize
  - не победил грязь, позникающую при скроллировании карты :(
    Все очень стреанно: проверил, что линии стираются всегда,
    с теми же координатами, что и рисовались, и между рисовкой
    и стиранием нет скроллирования.
    Еще, если бы скроллирование происходило как-то с задержкой -
    грязь получалась бы в виде параллельных линий, а она сходится
    к закрепленным на плоскости точкам...
    
  * перенес все, относящееся к рисованию rubber внутрь viewer'a.
    Теперь инициальзировать rubber не обязательно после того,
    как viewer обретет окно и мы можем вставить rubber в mapstate!

    Таким образом rubber и workplane стали равноправны:
    viewer при инициализации получает ссылки на W и R,
    цепляет куда нужно их сигналы signal_refresh и отрисовывает их
    как надо.
    ActionModes меняют только rubber и workplane, а про viewer ничего 
    не знают!

  * В MoveWaypoint добавил резину.

  - надо разбираться с масштабами. Сейчас растровые координаты в
    workplane и в layer'ах разные и из-за этого происходит много 
    нестыковок. Можно бы, конечно, устроить пересчет внутри workplain,
    но я бы подумал для начала, как сделать одни растровые координаты.

  * исправил глупую ошибку, что generic_dialog выдавал результат 0 
    от обеих кнопок.
   
--------------------------------------------------------------------
slazav, 27.06.2007
 * причесывание viewer'a
 * из viewer'а выкинута работа с масштабами - это дело workplane
   (при этом часть кода для изменения масштаба ушла в mapview.h -
   workplane ведь не знает, как надо менять window_origin viewer'a...)
 * mapview.h - добавил сохранение в файл всех доступных данных.
 * mapview.h - по кнопке 'r' обнуляет кэш вьюера. Пока actions сами не 
   умеют пинать вьюер, буду обходиться так...

--------------------------------------------------------------------
slazav, 22.06.2007
 * добавил am_add_wpt.h (очень уж хотелось получать координаты из карты! :))
 * в LayerGeoData добавил метод refresh() - пересчет границ данных
   (после добавления или редактирования такое надо делать) 
 * добавил am_move_wpt.h, пока без резины.
 * в layer.h вставил метод refresh(), который вызывается из 
   workplain::mark_level_dirty 
   Надо бы еще как-то layer пинать, что наши данные изменились...
 - не работает - сохранение наших отредактированных геоданных
 - не работает - обновление layer cache после исправления геоданных

--------------------------------------------------------------------
ushakov, 21.06.2007

 * сделаны режимы и действия! 
   viewer/generic_dialog.{h,cpp}
   viewer/action_manager.h
   viewer/action_mode.h
   viewer/am_edit_wpt.h

 * geo_io/geo_data.h: преобразования точек из/в Options

--------------------------------------------------------------------
ushakov, 17.06.2007

 * layers/layer_geodata.h: вычистил действия, пытаюсь вынести их в
   отдельный класс;
   создал методы получения точек и треков по координатам на плоскости
 
 * viewer/viewer.h: перенёс всю работу с событиями в programs/mapview.h,
   так как там будет весь контроль, а viewer будет только показывать и 
   отвечать на команды

 * geo_io/geo_convs.cpp: откатил часть Славиных изменений, так как иначе
   карты рисовались с полями и эти поля друг друга перекрывали (в основном
   откат касается обработки границ)

--------------------------------------------------------------------
slazav, 16.06.2007

 * programs/mapsoft_mapcnv -- делает не только растровую карту в
   нужном диапазоне координат, но и правильно привязанный fig-файл с
   этой картой.

 * loaders/image_ks.h -- загрузчик снимков с new.kosmosnimki.ru,
   аналогичный loaders/image_google.h

 * geo_io/geo_names.h, geo_io/geo_convs.h -- добавлена проекция 
   "google" (Кажется, это не совсем честный меркатор)

 * geo_io/geo_refs.h -- построение привязок для космоснимков

 * geo_io/geo_convs.h 
   Rect<int> map2map::bb_frw(const Rect<int> & R);
   Rect<int> map2map::bb_bck(const Rect<int> & R);
   -- преобразование прямоугольника (в произвольную фигуру) и 
   нахождение минимального прямоугольника, в котором она лежит.
   ("Какую часть картинки надо загрузить для преобразования")

 * Во вьюере cache_updater зачем-то делал сначала временную плитку 
   и сигналил (временную плитку также делает и draw_tile).
   Убрано.

 * geo_io/geo_convs.cpp -- Исправил ошибки из-за неправильного округления,
   и вообще все упростил в map2map::image_bck / image_frw

 * Удалил старый layer_google1.h и layer_geodata_g.h

 * Программы mapsoft_googleview и mapsoft_ksview
--------------------------------------------------------------------
