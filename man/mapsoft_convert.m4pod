=head1 NAME

mapsoft_convert -- convert geodata to various formats


=head1 SYNTAX

	mapsoft_convert <options> <input files> -o <output file>


=head1 INPUT FILES

format is determined by file extension:

B<<  *.xml >> -- mapsoft native XML-like format

B<<  *.fig >> -- mapsoft geofig format

B<<  *.wpt, *.plt, *.map >> -- OziExplorer format

B<<  *.gpx >> -- GPX format /partial support, tracks and waypoints

B<<  *.gu >> -- old garmin-utils format (tracks and waypoints only)

B<<  *.zip >> -- zipped files

B<<  gps: >> -- read data from Garmin GPS via autodetected serial device

B<<  <character device> >> -- read data from Garmin GPS via serial device


=head1 OUTPUT FILE

Format is determined by file extension:

B<<  *.xml >> -- mapsoft native XML-like format

B<<  *.wpt, *.plt, *.map, *.oe  >> -- OziExplorer format (Each track,
waypoint set or map reference will be written in a separate .plt, .wpt
or .map file)

B<<  *.zip >> -- zipped OziExplorer files

B<<  *.gpx >> -- GPX format /partial support, tracks and waypoints/

B<<  *.kml >> -- Google KML format /partial support, tracks and waypoints/

B<<  *.kmz >> -- zipped kml

B<<  *.gu  >> -- old garmin-utils format (tracks and waypoints only)

B<<  *.tif, .tiff, .jpg, .jpeg >> -- raster image (see below)

B<<  gps: >> -- send data to Garmin GPS via autodetected serial device

B<<  <character device> >> -- send data to Garmin GPS via serial device


=head1 OPTIONS

B<<  -o, --out <arg> >> -- output file name

B<<  -h, --help >> -- show this message

B<<  --pod >> -- show this message as POD template

B<<  -v, --verbose >> -- be verbose

=head1 OPTIONS FOR GEODATA FILTERING

include(`inc/geo_io_filters.m4')

=head1 OPTIONS FOR RENDERING IMAGES

B<<  --htm <file> >> -- write html map into file

B<<  -f, --fig <file> >> -- write fig-file

B<<  -m, --map <file> >> -- write map-file

B<<  --draw_borders >> -- draw map borders

B<<  --trk_draw_dots >> -- draw dots on tracks

B<<  --trk_draw_arrows >> -- draw arrows on tracks.

B<<  --max_image <W,H> >> -- don't write images larger then this,.
default 1000,1000

B<<  --data_marg <arg> >> -- margins around data (works only if no.
geometry set), pixels

B<< --jpeg_quality <arg> >> -- set jpeg quality

=head1 OPTIONS FOR RENDERING IMAGES, GEOMETRY SETTINGS

include(`inc/geo_refs.m4')

By default the scale of resulting map is the same as one of the first.
input map. If there is no maps on input scale=1e-5,dpi=200. You may
change default value using mag --option or rewrite it by dpi and
scale (or rscale) parameters

Note: using rscale=100000, dpi=300 and rscale=50000, dpi=150 gave same
images but different geofig files.

=head1 OPTIONS FOR RENDERING IMAGES, GOOGLE/KOSMOSNIMKI INPUT:

B<<  --ks_zoom >> -- 

B<<  --google_zoom >> -- 

B<<  --google_dir >> -- 

B<<  --ks_dir >> -- 

B<<  --download >> -- turn on auto downloading

Now kosmosnimki downloading is broken.


=head1 EXAMPLES

Convert Ozi map files to a single xml:

	mapsoft_convert /maps/*.map -o maps.xml

Download waypoints and active log from GPS device and write them down in
Ozi format files data.plt and data.wpt:

	mapsoft_convert /dev/ttyUSB0 -s o -o data.plt

Convert waypoints and track to packed kml format:

	mapsoft_convert data.plt data.wpt -o data.kmz

Create jpeg image with map from maps.xml and data from data.plt. Create also a map-file for this image

	mapsoft_convert maps.xml data.plt -o mymap.jpg --map=mymap.map

Create jpeg image with KS image and your dataand map-file for it. ./KS directory must exist.

	mapsoft_convert --ks=14 --ks_dir=~/KS --download=1 data.plt -o mymap.jpg

include(`inc/foot.m4')
