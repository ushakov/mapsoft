В этой директории находятся разные небольшие библиотеки 
нижнего уровня: работа с точками, с цветом, с картинками, с геоданными и т.п.

cache.h -- кэш
    пришло из viewer/cache.h
Без изменений.

point.h -- точка на плоскости (сложение/вычитание, умножение на число, сравнение и т.п.)
    То, что раньше находилось в трех местах:
    viewer/pointrect.h
    srtm02/point.h
    io_new/geo_m.h  g_point
    наверное, и вместо comparable_pair надо использовать Point...

rect.h -- прямоугольники
    пришло из viewer/pointrect.h

pointset.h -- работа с множествами точек, с границами
    пришло из srtm02/point.h
пока не готово!!!

color.h -- цвет 
    То, что раньше находилось в 
    image-gdk/image.h
    srtm02/color.h
Два класса: RGB и RGBA, которые можно (кажется) свободно 
преобразовывать друг в друга и в int.
TODO сложение и умножение на число??

rainbow.h -- радуга и пр. цветовые градиенты
    из srtm02/color.h

image.h -- картинка с окном.

    проверка скорости при разной организации доступа к данным
    (заполнение картинки 1000х1000 int):
    1. vector<int>    -- 8.13s
    2. int image[w*h] -- 1.37s
    3. с функциями доступа void setxy(int *image, int x, int y, int c){image[w*y+x] = c;} -- 2.23s
       (кажется, что передача одного параметра добавляет 0.2с,
        причем, неважно, inline или нет (странно...) )
    4. Доступ [y*w0+x] или [i] -- несущественно

    Вообще, кажется, что окно будет не нужно, когда мы научимся грузить часть картинки.
    Пока пусть будет для проверки...

    Не очень понимаю, как создавать картинки в отдельной функции...
    Как ни странно, в таком кусочке картинка создается один раз и не копируется. Странно...

    Image<RGB> get_image(){
      Image<RGB> i(100,100);
      return i;
    }

    main(){
      Image<RGB> i1 = get_image();
    }

image_io.h -- чтение/запись картинок в файл
пока не готово!!!
